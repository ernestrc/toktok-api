toktok {

  source{
    host = "192.168.59.103"
    db = "toktok"
    collections {
      UserEvent {
        host = "192.168.59.103"
        db = "toktok"
        port = 27017
      }
    }
  }

  email-whitelist = ["[a-zA-Z0-9\\.]*@(tokbox.com)"]

  opentok {
    apikey = 1234
    secret = "1234"
  }

  actors {
    supervisor{
      retries= 20
      within = 10s
    }
    endpoint-fallback = 5s
    timeout = 10s
  }
}


akka {

  # when tracing with atmos use this logger instead
  #loggers = ["com.typesafe.atmos.trace.Slf4jTraceContextLogger"]
  loggers = ["akka.event.slf4j.Slf4jLogger"]

  # Log level used by the configured loggers (see "loggers") as soon
  # as they have been started; before that, see "stdout-loglevel"
  # Options: OFF, ERROR, WARNING, INFO, DEBUG
  loglevel = "DEBUG"

  # Log level for the very basic logger activated during ActorSystem startup.
  # This logger prints the log messages to stdout (System.out).
  # Options: OFF, ERROR, WARNING, INFO, DEBUG
  stdout-loglevel = "DEBUG"

  actor {
    guardian-supervisor-strategy = "io.toktok.command.users.UserGuardianStrategy"
    provider = "akka.remote.RemoteActorRefProvider"
  }
  remote {
    enabled-transports = ["akka.remote.netty.tcp"]
    netty.tcp {
      hostname = "127.0.0.1"
      port = 28001
    }
  }
}

atmos {
  trace {
    enabled = false
    node = toktok

    traceable {
      "*" = off
    }
    sampling {
      "*" = 1
    }
  }
}
